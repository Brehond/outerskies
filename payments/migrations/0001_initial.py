# Generated by Django 5.2.3 on 2025-06-24 22:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('plan_type', models.CharField(choices=[('free', 'Free'), ('stellar', 'Stellar'), ('cosmic', 'Cosmic')], max_length=20)),
                ('billing_cycle', models.CharField(choices=[('monthly', 'Monthly'), ('yearly', 'Yearly')], default='monthly', max_length=20)),
                ('price_monthly', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_yearly', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stripe_price_id_monthly', models.CharField(blank=True, max_length=100, null=True)),
                ('stripe_price_id_yearly', models.CharField(blank=True, max_length=100, null=True)),
                ('charts_per_month', models.IntegerField(default=3)),
                ('ai_interpretations_per_month', models.IntegerField(default=3)),
                ('priority_support', models.BooleanField(default=False)),
                ('advanced_ai_models', models.BooleanField(default=False)),
                ('chart_history_unlimited', models.BooleanField(default=False)),
                ('export_features', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('features', models.JSONField(default=list, help_text='List of features included in this plan')),
                ('is_active', models.BooleanField(default=True)),
                ('is_popular', models.BooleanField(default=False, help_text='Mark as featured plan')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'subscription_plan',
                'ordering': ['price_monthly'],
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed_amount', 'Fixed Amount')], max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('max_uses', models.IntegerField(blank=True, help_text='Maximum number of times this coupon can be used', null=True)),
                ('current_uses', models.IntegerField(default=0)),
                ('valid_from', models.DateTimeField()),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicable_plans', models.ManyToManyField(blank=True, to='payments.subscriptionplan')),
            ],
            options={
                'db_table': 'coupon',
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_customer_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('canceled', 'Canceled'), ('past_due', 'Past Due'), ('unpaid', 'Unpaid'), ('trialing', 'Trialing'), ('incomplete', 'Incomplete'), ('incomplete_expired', 'Incomplete Expired')], default='incomplete', max_length=20)),
                ('current_period_start', models.DateTimeField(blank=True, null=True)),
                ('current_period_end', models.DateTimeField(blank=True, null=True)),
                ('cancel_at_period_end', models.BooleanField(default=False)),
                ('canceled_at', models.DateTimeField(blank=True, null=True)),
                ('charts_used_this_month', models.IntegerField(default=0)),
                ('interpretations_used_this_month', models.IntegerField(default=0)),
                ('last_usage_reset', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='payments.subscriptionplan')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_subscription',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('canceled', 'Canceled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_method', models.CharField(choices=[('card', 'Credit Card'), ('bank_transfer', 'Bank Transfer'), ('paypal', 'PayPal')], default='card', max_length=20)),
                ('stripe_payment_intent_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('stripe_invoice_id', models.CharField(blank=True, max_length=100, null=True)),
                ('billing_email', models.EmailField(max_length=254)),
                ('billing_name', models.CharField(max_length=255)),
                ('billing_address', models.JSONField(blank=True, default=dict)),
                ('description', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='payments.usersubscription')),
            ],
            options={
                'db_table': 'payment',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CouponUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('used_at', models.DateTimeField(auto_now_add=True)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='payments.coupon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coupon_usages', to=settings.AUTH_USER_MODEL)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coupon_usages', to='payments.payment')),
            ],
            options={
                'db_table': 'coupon_usage',
                'unique_together': {('coupon', 'user')},
            },
        ),
    ]
