# Generated by Django 5.2.3 on 2025-06-22 13:37

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('birth_date', models.DateField(blank=True, help_text="User's birth date for personalized features", null=True)),
                ('birth_time', models.TimeField(blank=True, help_text="User's birth time for accurate chart calculations", null=True)),
                ('birth_location', models.CharField(blank=True, help_text="User's birth location", max_length=255)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Birth latitude', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Birth longitude', max_digits=9, null=True)),
                ('timezone', models.CharField(default='UTC', help_text="User's timezone", max_length=50)),
                ('preferred_zodiac_type', models.CharField(choices=[('tropical', 'Tropical'), ('sidereal', 'Sidereal')], default='tropical', help_text='Preferred zodiac system', max_length=20)),
                ('preferred_house_system', models.CharField(choices=[('placidus', 'Placidus'), ('whole_sign', 'Whole Sign')], default='placidus', help_text='Preferred house system', max_length=20)),
                ('preferred_ai_model', models.CharField(default='gpt-4', help_text='Preferred AI model for interpretations', max_length=50)),
                ('email_verified', models.BooleanField(default=False)),
                ('email_verification_token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('email_verification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('profile_public', models.BooleanField(default=False, help_text='Allow others to view profile')),
                ('chart_history_public', models.BooleanField(default=False, help_text='Allow others to view chart history')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'chart_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Chart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='User-defined chart name', max_length=255)),
                ('birth_date', models.DateField()),
                ('birth_time', models.TimeField()),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('location_name', models.CharField(max_length=255)),
                ('timezone', models.CharField(max_length=50)),
                ('zodiac_type', models.CharField(choices=[('tropical', 'Tropical'), ('sidereal', 'Sidereal')], max_length=20)),
                ('house_system', models.CharField(choices=[('placidus', 'Placidus'), ('whole_sign', 'Whole Sign')], max_length=20)),
                ('ai_model_used', models.CharField(max_length=50)),
                ('chart_data', models.JSONField(help_text='Raw chart calculation data')),
                ('planetary_positions', models.JSONField(help_text='Planetary positions and aspects')),
                ('house_positions', models.JSONField(help_text='House cusps and signs')),
                ('aspects', models.JSONField(help_text='Planetary aspects')),
                ('interpretation', models.TextField(blank=True, help_text='AI-generated interpretation')),
                ('interpretation_tokens_used', models.IntegerField(default=0, help_text='Number of tokens used for interpretation')),
                ('interpretation_cost', models.DecimalField(decimal_places=6, default=0, help_text='Cost of interpretation', max_digits=10)),
                ('chart_image', models.ImageField(blank=True, help_text='Generated chart image', null=True, upload_to='charts/')),
                ('is_public', models.BooleanField(default=False, help_text='Allow public access to this chart')),
                ('is_favorite', models.BooleanField(default=False, help_text="User's favorite chart")),
                ('tags', models.JSONField(default=list, help_text='User-defined tags for organization')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Chart',
                'verbose_name_plural': 'Charts',
                'db_table': 'chart',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('is_used', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'password_reset_token',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_session',
                'ordering': ['-last_activity'],
            },
        ),
    ]
